version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.20

build_image: &build_image
  docker:
    - image: cimg/node:16.14.0

attach_workspace: &attach_workspace
  attach_workspace:
    at: .

persist_build_to_workspace: &persist_build_to_workspace
  persist_to_workspace:
    root: .
    paths:
      - build

persist_node_modules_to_workspace: &persist_node_modules_to_workspace
  persist_to_workspace:
    root: .
    paths:
      - node_modules


jobs:
  install:
    <<: *build_image
    steps:
      - checkout
      - restore_cache:
          keys:
            - nodejs-deps-{{ checksum "package-lock.json" }}
            - nodejs-deps-
      - run: |
          npm install
      - save_cache:
          paths:
            - node_modules
          key: nodejs-deps-{{ checksum "package-lock.json" }}
      - <<: *persist_node_modules_to_workspace

  build:
    <<: *build_image
    steps:
      - checkout
      - <<: *attach_workspace
      - run: |
          npm run build
      - <<: *persist_build_to_workspace

  deploy-development:
    <<: *build_image
    steps:
      - checkout
      - <<: *attach_workspace
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: |
          IMAGE=minaroid/nodejs-circleci:development-1.0.$BUILD_NUMBER
          LATEST_IMAGE=$AWS_ECR:development-latest
          docker build -t $IMAGE .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $
          docker tag $IMAGE $LATEST_IMAGE
          docker push $LATEST_IMAGE

      - <<: *persist_build_to_workspace


workflows:
  version: 2
  main:
    jobs:
      - install:
          filters:
            branches:
              only:
                - deployments/development
                - deployments/staging
                - deployments/production

      - build:
          requires:
            - install
          filters:
            branches:
              only:
                - deployments/development
                - deployments/staging
                - deployments/production
      - deploy-development:
          requires:
            - build
          filters:
            branches:
              only: deployments/development
      # - staging:
      #     requires:
      #       - build
      #   filters:
      #     branches:
      #       only: staging
      # - production:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: production
